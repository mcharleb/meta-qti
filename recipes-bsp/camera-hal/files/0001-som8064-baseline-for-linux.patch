From fa8810af86b8bc42bcd190ae19b2404f392609d1 Mon Sep 17 00:00:00 2001
From: Kaustubh Gondkar <kgondkar@qti.qualcomm.com>
Date: Fri, 20 Jun 2014 17:07:48 -0700
Subject: [PATCH] som8064 baseline for linux

Change-Id: I9a81e9be2a64647d85cf2c3de451f8571c200097
---
 Makefile.am                               | 37 ++++++++++++++++++++++---------
 camera-hal.pc.in                          | 10 +++++++++
 configure.ac                              |  6 +++--
 mm-camera-interface/mm_camera.c           |  4 ++--
 mm-camera-interface/mm_camera.h           |  2 +-
 mm-camera-interface/mm_camera_stream.c    |  2 +-
 mm-camera-interface/mm_omx_jpeg_encoder.h |  1 +
 7 files changed, 46 insertions(+), 16 deletions(-)
 create mode 100644 camera-hal.pc.in

diff --git a/Makefile.am b/Makefile.am
index 751e362..78a6eba 100755
--- a/Makefile.am
+++ b/Makefile.am
@@ -26,18 +26,28 @@ libcamera_la_CFLAGS+= -DUSE_NEON_CONVERSION
 # Uncomment below line to enable smooth zoom
 #libcamera_la_CFLAGS+= -DCAMERA_SMOOTH_ZOOM
 
-libcamera_la_SOURCES := mm_camera.c
-libcamera_la_SOURCES += mm_camera_channel.c
-libcamera_la_SOURCES += mm_camera_helper.c
-libcamera_la_SOURCES += mm_camera_interface2.c
-libcamera_la_SOURCES += mm_camera_notify.c
-libcamera_la_SOURCES += mm_camera_poll_thread.c
-libcamera_la_SOURCES += mm_camera_sock.c
-libcamera_la_SOURCES += mm_camera_stream.c
+h_sources = mm-camera-interface/mm_camera.h \
+            mm-camera-interface/mm_camera_dbg.h \
+            mm-camera-interface/mm_camera_interface2.h \
+            mm-camera-interface/mm_camera_sock.h \
+            mm-camera-interface/mm_jpeg_encoder.h \
+            mm-camera-interface/mm_omx_jpeg_encoder.h
+
+pkgincludedir = $(includedir)/mm_camera_interface
+library_includedir = $(pkgincludedir)
+library_include_HEADERS = $(h_sources)
+
+libcamera_la_SOURCES := mm-camera-interface/mm_camera.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_channel.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_helper.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_interface2.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_notify.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_poll_thread.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_sock.c
+libcamera_la_SOURCES += mm-camera-interface/mm_camera_stream.c
 
 if BUILD_JPEG
-libcamera_la_SOURCES += mm_jpeg_encoder.c
-libcamera_la_SOURCES += mm_omx_jpeg_encoder.c
+libcamera_la_SOURCES += mm-camera-interface/mm_omx_jpeg_encoder.c
 endif
 
 if BUILD_UNIFIED_CODE
@@ -69,6 +79,13 @@ endif
 libcamera_la_LDFLAGS := $(DEBUG_LDFLAGS)
 libcamera_la_LDFLAGS += -shared
 libcamera_la_LIBADD = -ldl
+libcamera_la_LIBADD += -limage_omx_common
+libcamera_la_LIBADD += -limageomxcore
+libcamera_la_LIBADD += -lrt
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = camera-hal.pc
+EXTRA_DIST = $(pkgconfig_DATA)
 
 dirs :=
 SUBDIRS = $(dirs)
diff --git a/camera-hal.pc.in b/camera-hal.pc.in
new file mode 100644
index 0000000..502cf42
--- /dev/null
+++ b/camera-hal.pc.in
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: mm-camera-interface
+Description: mm-camera-interface library
+Version: @VERSION@
+Libs: -L${libdir} -lcamera
+Cflags: -I${includedir}/mm_camera_interface
diff --git a/configure.ac b/configure.ac
index 790d7e0..7bc8acb 100755
--- a/configure.ac
+++ b/configure.ac
@@ -2,7 +2,7 @@ AC_PREREQ(2.61)
 
 AC_INIT([camera-hal],1.0.0)
 
-AM_INIT_AUTOMAKE([-Werror -Wall gnu foreign])
+AM_INIT_AUTOMAKE([-Wall gnu foreign])
 
 AM_MAINTAINER_MODE
 
@@ -10,6 +10,7 @@ AC_CONFIG_HEADER([configure.h])
 AC_CONFIG_MACRO_DIR([m4])
 
 # Checks for programs.
+AM_PROG_AR
 AM_PROG_AS
 AC_PROG_CC
 AC_PROG_CXX
@@ -76,6 +77,7 @@ AM_CONDITIONAL([BUILD_UNIFIED_CODE], [test "x$BUILD_UNIFIED_CODE" = "xtrue"])
 AM_CONDITIONAL([BUILD_JPEG], [test "x$BUILD_JPEG" = "xtrue"])
 
 AC_OUTPUT([ \
-	Makefile
+	Makefile \
+	camera-hal.pc
 ])
 
diff --git a/mm-camera-interface/mm_camera.c b/mm-camera-interface/mm_camera.c
index f31f3aa..20dff11 100755
--- a/mm-camera-interface/mm_camera.c
+++ b/mm-camera-interface/mm_camera.c
@@ -437,7 +437,7 @@ int32_t mm_camera_send_native_ctrl_cmd(mm_camera_obj_t * my_obj,
     ctrl_cmd.value = value;
     ctrl_cmd.status = CAM_CTRL_SUCCESS;
     rc = mm_camera_util_private_s_ctrl(my_obj->ctrl_fd, MSM_V4L2_PID_CTRL_CMD,
-                                                                            (void __user*)&ctrl_cmd);
+                                                                            (void *)&ctrl_cmd);
     CDBG("%s: type=%d, rc = %d, status = %d\n",
                 __func__, type, rc, ctrl_cmd.status);
 
@@ -460,7 +460,7 @@ static int32_t mm_camera_send_native_ctrl_timeout_cmd(mm_camera_obj_t * my_obj,
     ctrl_cmd.value = value;
     ctrl_cmd.status = CAM_CTRL_SUCCESS;
     rc = mm_camera_util_private_s_ctrl(my_obj->ctrl_fd, MSM_V4L2_PID_CTRL_CMD,
-        (void __user*)&ctrl_cmd);
+        (void *)&ctrl_cmd);
     CDBG("%s: type=%d, rc = %d, status = %d\n",
         __func__, type, rc, ctrl_cmd.status);
     if(rc != MM_CAMERA_OK || ((ctrl_cmd.status != CAM_CTRL_ACCEPTED) &&
diff --git a/mm-camera-interface/mm_camera.h b/mm-camera-interface/mm_camera.h
index c905b48..2cf249e 100644
--- a/mm-camera-interface/mm_camera.h
+++ b/mm-camera-interface/mm_camera.h
@@ -286,7 +286,7 @@ extern const char *mm_camera_util_get_dev_name(mm_camera_obj_t * my_obj);
 extern int32_t mm_camera_util_s_ctrl( int32_t fd,
                                             uint32_t id, int32_t value);
 extern int32_t mm_camera_util_private_s_ctrl( int32_t fd,
-                                            uint32_t id, void __user *value);
+                                            uint32_t id, void *value);
 extern int32_t mm_camera_util_g_ctrl( int32_t fd,
                                             uint32_t id, int32_t *value);
 extern int32_t mm_camera_ch_fn(mm_camera_obj_t * my_obj,
diff --git a/mm-camera-interface/mm_camera_stream.c b/mm-camera-interface/mm_camera_stream.c
index a1fb935..0557720 100755
--- a/mm-camera-interface/mm_camera_stream.c
+++ b/mm-camera-interface/mm_camera_stream.c
@@ -287,7 +287,7 @@ int32_t mm_camera_util_s_ctrl( int32_t fd,  uint32_t id, int32_t value)
     return rc;
 }
 
-int32_t mm_camera_util_private_s_ctrl(int32_t fd,  uint32_t id, void __user *value )
+int32_t mm_camera_util_private_s_ctrl(int32_t fd,  uint32_t id, void  *value )
 {
     int rc = MM_CAMERA_OK;
     struct msm_camera_v4l2_ioctl_t v4l2_ioctl;
diff --git a/mm-camera-interface/mm_omx_jpeg_encoder.h b/mm-camera-interface/mm_omx_jpeg_encoder.h
index 4f4413d..0428ced 100755
--- a/mm-camera-interface/mm_omx_jpeg_encoder.h
+++ b/mm-camera-interface/mm_omx_jpeg_encoder.h
@@ -30,6 +30,7 @@
 #define MM_OMX_JPEG_ENCODER_H_
 #include <linux/msm_ion.h>
 #include "camera.h"
+#include "jpeg_common.h"
 
 typedef struct omx_jpeg_encode_params_t {
     const cam_ctrl_dimension_t * dimension;
-- 
1.8.2.1

