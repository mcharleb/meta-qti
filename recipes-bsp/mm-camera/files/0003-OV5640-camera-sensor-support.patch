From af0cdf5c52e1e8661dfb4f03077d0264a131bea9 Mon Sep 17 00:00:00 2001
From: Kaustubh Gondkar <kgondkar@qti.qualcomm.com>
Date: Tue, 17 Jun 2014 22:13:28 -0700
Subject: [PATCH] OV5640 camera sensor support

Change-Id: I5b53ad562c6f7b62ab04207d5c527ab51f928dfc
---
 server/Makefile.am                       |   2 +
 server/hardware/sensor/ov5640/ov5640_u.c | 147 +++++++++++++++++++++++++++++++
 server/hardware/sensor/ov5640/ov5640_u.h |  13 +++
 server/hardware/sensor/sensor.c          |   3 +
 4 files changed, 165 insertions(+)
 create mode 100644 server/hardware/sensor/ov5640/ov5640_u.c
 create mode 100644 server/hardware/sensor/ov5640/ov5640_u.h

diff --git a/server/Makefile.am b/server/Makefile.am
index 5446efe..40759c8 100644
--- a/server/Makefile.am
+++ b/server/Makefile.am
@@ -56,6 +56,7 @@ libmmcamera_target_la_CFLAGS += -I hardware/sensor/imx135
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/mt9e013
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/mt9m114
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/ov2720
+libmmcamera_target_la_CFLAGS += -I hardware/sensor/ov5640
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/ov7692
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/ov8825
 libmmcamera_target_la_CFLAGS += -I hardware/sensor/ov9724
@@ -216,6 +217,7 @@ libmmcamera_target_la_SOURCES += hardware/sensor/imx074/imx074_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/imx135/imx135_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/mt9e013/mt9e013_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/ov2720/ov2720_u.c
+libmmcamera_target_la_SOURCES += hardware/sensor/ov5640/ov5640_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/ov5647/ov5647_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/ov7692/ov7692_u.c
 libmmcamera_target_la_SOURCES += hardware/sensor/ov8825/ov8825_u.c
diff --git a/server/hardware/sensor/ov5640/ov5640_u.c b/server/hardware/sensor/ov5640/ov5640_u.c
new file mode 100644
index 0000000..7d008fe
--- /dev/null
+++ b/server/hardware/sensor/ov5640/ov5640_u.c
@@ -0,0 +1,147 @@
+/* 
+ * ov5640_v4l2 - V4L2 based driver for Omnivision ov5640 camera
+ * Copyright Inforce Computing, 2013.
+ * Suman Kumar <suman@inforcecomputing.com>
+ * 27-Mar-2013
+ */
+/*
+[SENSOR]
+Sensor Model:   OV5640
+Camera Module:
+Lens Model:
+Driver IC:
+PV Size         = 640 x 480
+Cap Size        = 2592 x 1944
+Output Format   = YUYV
+MCLK Speed      = 24M
+PV DVP_PCLK     = 28M
+Cap DVP_PCLK    = 56M
+PV Frame Rate   = 30fps
+Cap Frame Rate  = 7.5fps
+I2C Slave ID    = 0x78
+I2C Mode        = 16Addr, 8Data
+*/
+
+#include <stdio.h>
+#include <unistd.h>
+#include <sys/ioctl.h>
+#include "camera_dbg.h"
+#include "sensor_util.h"
+#include "ov5640_u.h"
+
+/*============================================================================
+                        EXTERNAL VARIABLES DECLARATIONS
+============================================================================*/
+/* r/w copy of chromatix data. Must be initialized with
+ * active sensor chromatix data everytime camera is started.
+ */
+/* Sensor model number used in camear for this sensor */
+#define SENSOR_MODEL_NO_OV5640 "ov5640"
+#define OV5640_LOAD_CHROMATIX(n) \
+  "libchromatix_"SENSOR_MODEL_NO_OV5640"_"#n".so"
+
+/* Types of shared object available for this sensor to load dynamically */
+char *ov5640_load_chromatix[SENSOR_LOAD_CHROMATIX_MAX] = {
+  NULL, /* camera / camcorder preview */
+  NULL, /* Non HD Video recording */
+  NULL, /* HD video recording */
+  NULL, /* HFR 60 fps video recording */
+  NULL, /* HFR 90 fps video recording */
+  NULL, /* HFR 120 fps video recording */
+  NULL, /* HFR 150 fps video recording */
+  NULL, /* AR */
+  NULL, /* ZSL */
+};
+
+static struct msm_camera_csid_vc_cfg ov5640_cid_cfg[] = {
+  {0, CSI_YUV422_8, CSI_DECODE_8BIT},
+  {1, CSI_EMBED_DATA, CSI_DECODE_8BIT},
+};
+
+static struct msm_camera_csi2_params ov5640_csi_params = {
+  .csid_params = {
+    .lane_cnt = 2,
+    .lut_params = {
+      .num_cid = ARRAY_SIZE(ov5640_cid_cfg),
+      .vc_cfg = ov5640_cid_cfg,
+    },
+  },
+  .csiphy_params = {
+    .lane_cnt = 2,
+    .settle_cnt = 0x6, //0x14, // /* 0x1B, - perfect vfe getting value. */
+  },
+};
+
+static struct msm_camera_csi2_params *ov5640_csi_params_array[] = {
+  &ov5640_csi_params,/*FULL*/
+  &ov5640_csi_params,/*QTR*/
+};
+
+/*****************************************************************************
+ *                          RUN TIME VARIABLES
+ ****************************************************************************/
+
+static sensor_camif_inputformat_t ov5640_inputformat[] = {
+    CAMIF_YCBCR_Y_CB_Y_CR,/*RES0*/
+    CAMIF_YCBCR_Y_CB_Y_CR,/*RES1*/
+};
+
+static sensor_crop_parms_t ov5640_cropinfo[] = {
+/*top, down, left, right*/
+  {0, 0, 0, 0},/*FULL*/
+  {0, 0, 0, 0},/*FULL*/
+};
+
+static uint32_t ov5640_mode_res[SENSOR_MODE_INVALID] = {
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_SNAPSHOT*/
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_RAW_SNAPSHOT*/
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_PREVIEW*/
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_VIDEO*/
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_VIDEO_HD*/
+  MSM_SENSOR_INVALID_RES,/*SENSOR_MODE_HFR_60FPS*/
+  MSM_SENSOR_INVALID_RES,/*SENSOR_MODE_HFR_90FPS*/
+  MSM_SENSOR_INVALID_RES,/*SENSOR_MODE_HFR_120FPS*/
+  MSM_SENSOR_INVALID_RES,/*SENSOR_MODE_HFR_150FPS*/
+  MSM_SENSOR_RES_FULL,/*SENSOR_MODE_ZSL*/
+};
+
+static sensor_function_table_t ov5640_func_tbl = {
+  .sensor_set_op_mode = sensor_util_set_op_mode,
+//  .sensor_get_mode_aec_info = sensor_util_get_mode_aec_info,
+  .sensor_get_dim_info = sensor_util_get_dim_info,
+  .sensor_get_preview_fps_range = sensor_util_get_preview_fps_range,
+  .sensor_get_snapshot_fps = sensor_util_get_snapshot_fps,
+//  .sensor_get_max_supported_hfr_mode = sensor_util_get_max_supported_hfr_mode,
+  .sensor_get_lens_info = sensor_get_lens_info,
+  .sensor_set_start_stream = sensor_util_set_start_stream,
+  .sensor_set_stop_stream = sensor_util_set_stop_stream,
+  .sensor_get_csi_params = sensor_util_get_csi_params,
+};
+
+int8_t ov5640_process_start(void *ctrl)
+{
+  sensor_ctrl_t *sctrl = (sensor_ctrl_t *) ctrl;
+  sctrl->fn_table = &ov5640_func_tbl;
+  sctrl->sensor.inputformat = ov5640_inputformat;
+  sctrl->sensor.crop_info = ov5640_cropinfo;
+  sctrl->sensor.mode_res = ov5640_mode_res;
+  sctrl->sensor.sensor_csi_params.csi2_params = &ov5640_csi_params_array[0];
+
+  sensor_util_get_output_info(sctrl);
+
+  sctrl->sensor.op_mode = SENSOR_MODE_VIDEO;
+
+  sctrl->sensor.out_data.sensor_output.connection_mode = SENSOR_MIPI_CSI;
+  sctrl->sensor.out_data.sensor_output.output_format = SENSOR_YCBCR;
+  sctrl->sensor.out_data.sensor_output.raw_output = SENSOR_8_BIT_DIRECT;
+
+  sctrl->sensor.out_data.lens_info.focal_length = 4.6;
+  sctrl->sensor.out_data.lens_info.pix_size = 1.4;
+  sctrl->sensor.out_data.lens_info.f_number = 2.65;
+  sctrl->sensor.out_data.lens_info.total_f_dist = 1.97;
+  sctrl->sensor.out_data.lens_info.hor_view_angle = 54.8;
+  sctrl->sensor.out_data.lens_info.ver_view_angle = 42.5;
+
+  sensor_util_config(sctrl);
+  return TRUE;
+}
diff --git a/server/hardware/sensor/ov5640/ov5640_u.h b/server/hardware/sensor/ov5640/ov5640_u.h
new file mode 100644
index 0000000..95d033f
--- /dev/null
+++ b/server/hardware/sensor/ov5640/ov5640_u.h
@@ -0,0 +1,13 @@
+/*============================================================================
+
+   Copyright (c) 2011 QUALCOMM Technologies Incorporated.  All Rights Reserved.
+   QUALCOMM Proprietary and Confidential.
+
+============================================================================*/
+#ifndef _OV5640__
+#define _OV5640__
+
+#include "sensor.h"
+
+int8_t ov5640_process_start(void *ctrl);
+#endif
diff --git a/server/hardware/sensor/sensor.c b/server/hardware/sensor/sensor.c
index 5cccb69..4e38128 100644
--- a/server/hardware/sensor/sensor.c
+++ b/server/hardware/sensor/sensor.c
@@ -36,6 +36,7 @@
   #include "imx135_u.h"
   #include "ov8825_u.h"
   #include "ov9724_u.h"
+  #include "ov5640_u.h"
 #endif
 
 #if VFE_31
@@ -81,6 +82,7 @@ extern char *ov5647_load_chromatix[];
 extern char *ov8825_load_chromatix[];
 extern char *imx135_load_chromatix[];
 extern char *ov9724_load_chromatix[];
+extern char *ov5640_load_chromatix[];
 static sensor_proc_start_t sensor_start;
 /*============================================================================
                         INTERNAL VARIABLES DEFINITIONS
@@ -104,6 +106,7 @@ static sensor_proc_start_t sensors[] = {
   SENSORS_PROCCESS_START(imx135),
   SENSORS_PROCCESS_START(ov8825),
   SENSORS_PROCCESS_START(ov9724),
+  SENSORS_PROCCESS_START(ov5640),
 #endif
 #if VFE_31
   SENSORS_PROCCESS_START(imx074),
-- 
1.8.2.1

