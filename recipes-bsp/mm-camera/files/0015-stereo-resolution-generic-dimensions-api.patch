diff --git a/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.c b/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.c
index 7e6b9ff..66af6e7 100644
--- a/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.c
+++ b/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.c
@@ -1634,9 +1634,19 @@ void system_dimension_init(int extendedmode)
     dimension->display_width = dimension->video_width;
     dimension->display_height = dimension->video_height;
 
+	if (preview_video_resolution_flag != -1)
     current_preview_video_resolution = preview_video_resolution_flag;
   }
 
+  CDBG_ERROR("Final Dimensions: Preview/Video %dx%d Snapshot %dx%d, Thumbnail %dx%d \n",
+	 dimension->video_width,
+	 dimension->video_height,
+     dimension->picture_width,
+     dimension->picture_height,
+     dimension->thumbnail_width,
+     dimension->thumbnail_height
+	);
+
   current_fmt.type = bufType;
   if (bufType == V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE) {
     current_fmt.fmt.pix_mp.field = V4L2_FIELD_NONE;
@@ -3271,11 +3281,11 @@ Camera_Resolution v4l2_qcamlib_get_current_preview_video_resolution() {
 	return current_preview_video_resolution;
 }
 
-int v4l2_qcamlib_get_current_preview_video_dimensions(uint16_t* pHeight, uint16_t* pWidth) {
+int v4l2_qcamlib_get_current_preview_video_dimensions(uint16_t* pWidth, uint16_t* pHeight) {
 	return v4l2_qcamlib_get_preview_video_dimensions(current_preview_video_resolution, pHeight, pWidth); 
 }
 
-int v4l2_qcamlib_get_preview_video_dimensions(int resolution, uint16_t* pHeight, uint16_t* pWidth) {
+int v4l2_qcamlib_get_preview_video_dimensions(int resolution, uint16_t* pWidth, uint16_t* pHeight) {
   if(resolution < RESOLUTION_MIN || resolution > RESOLUTION_PREVIEW_VIDEO_MAX) {
     CDBG_ERROR("%s: ERROR Invalid resolution %d \n", __func__, resolution);
 	return -1;
@@ -3320,6 +3330,17 @@ uint32_t v4l2_qcamlib_get_preview_frame_buffer_size() {
 	return preview_video_dimension_tbl[current_preview_video_resolution].bufSizeInBytes;
 }
 
+int v4l2_qcamlib_set_preview_video_resolution_wxh(uint16_t width, uint16_t height) {
+	input_display.user_input_display_width = width;
+    input_display.user_input_display_height = height;
+	CDBG_ERROR("Selected Preview Resolution: display_width = %d, display_height = %d\n",
+    	input_display.user_input_display_width, input_display.user_input_display_height);
+	
+  	preview_video_resolution_flag = -1;
+
+	return 1;
+}
+
 int v4l2_qcamlib_set_preview_video_resolution(int new_resolution) {
   char * resolution_name;
 
diff --git a/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.h b/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.h
index 837f325..216cc0a 100644
--- a/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.h
+++ b/apps/v4l2-qcamera-app/v4l2-qcamera-app-lib.h
@@ -108,14 +108,15 @@ typedef enum
 } Camera_Resolution;
 
 int		v4l2_qcamlib_set_preview_video_resolution(int new_resolution);
+int		v4l2_qcamlib_set_preview_video_resolution_wxh(uint16_t width, uint16_t height);
 
 Camera_Resolution v4l2_qcamlib_get_current_preview_video_resolution();
-int 	v4l2_qcamlib_get_current_preview_video_dimensions(uint16_t* pHeight, uint16_t* pWidth);
+int 	v4l2_qcamlib_get_current_preview_video_dimensions(uint16_t* pWidth, uint16_t* pHeight);
 char* 	v4l2_qcamlib_get_current_preview_video_resolution_name();
 char* 	v4l2_qcamlib_get_current_preview_video_resolution_description();
 
 Camera_Resolution v4l2_qcamlib_get_preview_video_resolution(int resolution);
-int 	v4l2_qcamlib_get_preview_video_dimensions(int resolution, uint16_t* pHeight, uint16_t* pWidth);
+int 	v4l2_qcamlib_get_preview_video_dimensions(int resolution, uint16_t* pWidth, uint16_t* pHeight);
 char* 	v4l2_qcamlib_get_preview_video_resolution_name(int resolution);
 char* 	v4l2_qcamlib_get_preview_video_resolution_description(int resolution);
 
diff --git a/apps/v4l2-qcamera-app/v4l2-qcamera-app.c b/apps/v4l2-qcamera-app/v4l2-qcamera-app.c
index 2c362ac..b19e019 100644
--- a/apps/v4l2-qcamera-app/v4l2-qcamera-app.c
+++ b/apps/v4l2-qcamera-app/v4l2-qcamera-app.c
@@ -1759,6 +1759,10 @@ void print_all_preview_video_resolutions() {
 }
 
 int manual_exposure_set = 0;
+int preview_dimensions = 0;
+uint16_t preview_width = 0;
+uint16_t preview_height= 0;
+
 /*===========================================================================
  * FUNCTION    - main -
  *
@@ -1779,7 +1783,7 @@ int main(int argc, char **argv)
 #endif
 
   /* get v4l2 params - memory type etc */
-  while ((c = getopt(argc, argv, "mouhsfiqd:e:r:")) != -1) {
+  while ((c = getopt(argc, argv, "mouhfiqd:e:r:s:t:")) != -1) {
     switch (c) {
       case 'd':
         yuvFrameDumpFactor = atoi(optarg);
@@ -1796,6 +1800,14 @@ int main(int argc, char **argv)
       case 'r':
 		v4l2_qcamlib_set_preview_video_resolution(atoi(optarg));
         break;
+      case 's':
+		preview_width = atoi(optarg);
+		preview_dimensions = 1;
+        break;
+      case 't':
+		preview_height = atoi(optarg);
+		preview_dimensions = 1;
+        break;
     #if 0
       case 'm':
         v4l2_qcamlib_preinit_set_memorytype(V4L2_MEMORY_MMAP);
@@ -1831,19 +1843,28 @@ int main(int argc, char **argv)
 	#endif
       case 'h':
       default:
-        printf("usage: %s [-o] [-d dumpFrameFactor] \n", argv[0]);
+        printf("usage: %s [] \n", argv[0]);
         printf("-o          :   Enable display overlay \n");
         /*printf("-e <factor> :   Set Exposure Value < -12 to 12 >  \n");*/
         printf("-d <factor> :   Dump Frames with factor  \n");
         printf("            :   <n>: Dump mod(n) frames  \n");
         printf("            :   <1>: Dump all frames  \n");
-        printf("-q          :   Manual exposure control  \n");
+        printf("-m          :   Manual exposure control  \n");
+        printf("-s <width>  :   Set Preview/Video frame width  \n");
+        printf("-t <height> :   Set Preview/Video frame height  \n");
         printf("-r <resoln> :   Set Preview/Video resolution  \n");
 		print_all_preview_video_resolutions();
         exit(0);
     }
   }
 
+  if(preview_dimensions) {
+	if (preview_width && preview_height)
+		v4l2_qcamlib_set_preview_video_resolution_wxh(preview_width, preview_height);
+	else
+		printf("ERROR: Incorrect preview width x height dimensions. Switching to default\n");
+  }
+	
   CDBG("\nV4L2 Camera Test Application\n");
 
   printf("Please select camera(0-back, 1-front):\n");
