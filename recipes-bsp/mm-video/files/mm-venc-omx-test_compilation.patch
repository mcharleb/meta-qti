From 6227da530f3f21b54767a17c76b42d8f6b21d293 Mon Sep 17 00:00:00 2001
From: Gustavo Solaira <gustavos@qti.qualcomm.com>
Date: Tue, 19 May 2015 18:05:29 -0700
Subject: [PATCH] Fix compilation in Linux

---
 Makefile.am                                        | 12 +---
 configure.ac                                       | 65 ++++------------------
 vidc/venc-omx/Makefile.am                          | 45 +++++++++++++++
 .../test-config/common/src/venctest_Encoder.cpp    |  6 ++
 .../test-config/common/src/venctest_FileSink.cpp   |  2 +
 5 files changed, 64 insertions(+), 66 deletions(-)
 create mode 100644 vidc/venc-omx/Makefile.am

diff --git a/Makefile.am b/Makefile.am
index 5413715..8377bd7 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -2,14 +2,4 @@
 #
 ACLOCAL_AMFLAGS = -I m4
 
-if TARGET_MSM7627A
-SUBDIRS = DivxDrmDecrypt \
-	qdsp5/vdec-omxh264 \
-	qdsp5/vdec-omxmp4 \
-	qdsp5/vdec-omxon2 \
-	qdsp5/vdec-omxrv9 \
-	qdsp5/vdec-omxvp8 \
-	qdsp5/vdec-omxwmv \
-	qdsp5/venc-omx \
-	qdsp5/vdec-common/test
-endif # TARGET_MSM7627A #
+SUBDIRS = vidc/venc-omx
diff --git a/configure.ac b/configure.ac
index 58f8600..6141b01 100644
--- a/configure.ac
+++ b/configure.ac
@@ -8,75 +8,30 @@
 AC_PREREQ(2.61)
 AC_INIT([mm-video-prop-ship],1.0.0)
 
-AM_INIT_AUTOMAKE([-Wall -Werror gnu foreign])
+AM_INIT_AUTOMAKE([-Wall -Werror gnu foreign subdir-objects])
 AM_MAINTAINER_MODE
 
 AC_CONFIG_HEADER([config.h])
 AC_CONFIG_MACRO_DIR([m4])
 
+AC_ARG_WITH([sanitized-headers],
+	[AS_HELP_STRING([--with-sanitized-headers=DIR],[location of the sanitized Linux headers])],
+	[CPPFLAGS="$CPPFLAGS -I$withval"])
+
 # Checks for programs.
 AC_PROG_CC
 AC_PROG_CPP
 AC_PROG_CXX
 AM_PROG_CC_C_O
+AM_PROG_AR
 AC_PROG_LIBTOOL
 AC_PROG_AWK
 AC_PROG_INSTALL
 AC_PROG_LN_S
 AC_PROG_MAKE_SET
 
-AC_ARG_ENABLE([target-msm7627a],
-	AC_HELP_STRING([--enable-target-msm7627a],
-		[Enable conditional compile for target msm7627a [default=no]]),
-	[target_msm7627a="${enableval}"],
-	target_msm7627a=no)
-
-AC_ARG_ENABLE([target-msm7627],
-	AC_HELP_STRING([--enable-target-msm7627],
-		[Enable conditional compile for target msm7627 [default=no]]),
-	[target_msm7627="${enableval}"],
-	target_msm7627=no)
-
-AC_ARG_ENABLE([target-msm7625],
-	AC_HELP_STRING([--enable-target-msm7625],
-		[Enable conditional compile for target msm7625 [default=no]]),
-	[target_msm7625="${enableval}"],
-	target_msm7625=no)
-
-AC_ARG_WITH([sanitized-headers],
-	[AS_HELP_STRING([--with-sanitized-headers=DIR],[location of the sanitized Linux headers])],
-	[CPPFLAGS="$CPPFLAGS -I$withval"])
-
-AC_ARG_WITH([common-includes],
-	[AS_HELP_STRING([--with-common-include=DIR],[location of common headers])],
-	[CPPFLAGS="$CPPFLAGS -I$withval"])
-
-AC_ARG_WITH([base-includes],
-	[AS_HELP_STRING([--with-base-include=DIR],[location of Android base framework headers])],
-	[CPPFLAGS="$CPPFLAGS -I$withval"])
-
-AC_ARG_WITH([video-prop-srcpath],
-	[AS_HELP_STRING([--with-video-prop-srcpath=DIR],[top-level path of proprietary mm-video project])],
-	[VID_PROP_SRC_PATH="$withval"])
-
-AM_CONDITIONAL([TARGET_MSM7627A], [test x$target_msm7627a = xyes])
-AM_CONDITIONAL([TARGET_MSM7627], [test x$target_msm7627 = xyes])
-AM_CONDITIONAL([TARGET_MSM7625], [test x$target_msm7625 = xyes])
-AM_CONDITIONAL([MP4_VLD_DSP], [test x$target_msm7627a = xyes])
-AM_CONDITIONAL([HAVE_VID_PROP_SRC_PATH], [test "x$video-prop-srcpath" != x])
-
-AC_SUBST(VID_PROP_SRC_PATH)
-
-AC_CONFIG_FILES([     \
-	Makefile \
-	DivxDrmDecrypt/Makefile \
-	qdsp5/vdec-omxh264/Makefile \
-	qdsp5/vdec-omxmp4/Makefile \
-	qdsp5/vdec-omxon2/Makefile \
-	qdsp5/vdec-omxrv9/Makefile \
-	qdsp5/vdec-omxvp8/Makefile \
-	qdsp5/vdec-omxwmv/Makefile \
-	qdsp5/vdec-common/test/Makefile \
-	qdsp5/venc-omx/Makefile \
-	])
+AC_CONFIG_FILES([
+    Makefile \
+    vidc/venc-omx/Makefile \
+    ])
 AC_OUTPUT
diff --git a/vidc/venc-omx/Makefile.am b/vidc/venc-omx/Makefile.am
new file mode 100644
index 0000000..239b676
--- /dev/null
+++ b/vidc/venc-omx/Makefile.am
@@ -0,0 +1,45 @@
+AM_CFLAGS = \
+	-g -O3 \
+	-DFEATURE_LINUX_A \
+	-DMSM8974 \
+	-Itest-config/common/inc \
+	-Itest-config/utils/inc
+
+AM_CPPFLAGS = $(AM_CFLAGS)
+
+bin_PROGRAMS = mm-venc-omx-test
+
+mm_venc_omx_test_SOURCES = \
+	test-config/utils/src/venc_time.c \
+	test-config/utils/src/venc_queue.c \
+	test-config/utils/src/venc_semaphore.c \
+	test-config/utils/src/venc_mutex.c \
+	test-config/utils/src/venc_sleep.c \
+	test-config/utils/src/venc_signal.c \
+	test-config/utils/src/venc_file.c \
+	test-config/utils/src/venc_thread.c \
+	test-config/common/src/venctest_Config.cpp \
+	test-config/common/src/venctest_Encoder.cpp \
+	test-config/common/src/venctest_File.cpp \
+	test-config/common/src/venctest_FileSink.cpp \
+	test-config/common/src/venctest_FileSource.cpp \
+	test-config/common/src/venctest_ITestCase.cpp \
+	test-config/common/src/venctest_Mutex.cpp \
+	test-config/common/src/venctest_Parser.cpp \
+	test-config/common/src/venctest_Queue.cpp \
+	test-config/common/src/venctest_Script.cpp \
+	test-config/common/src/venctest_Signal.cpp \
+	test-config/common/src/venctest_SignalQueue.cpp \
+	test-config/common/src/venctest_Sleeper.cpp \
+	test-config/common/src/venctest_TestCaseFactory.cpp \
+	test-config/common/src/venctest_TestChangeQuality.cpp \
+	test-config/common/src/venctest_TestFlush.cpp \
+	test-config/common/src/venctest_TestGetSyntaxHdr.cpp \
+	test-config/common/src/venctest_TestEncode.cpp \
+	test-config/common/src/venctest_TestStateExecutingToIdle.cpp \
+	test-config/common/src/venctest_TestStatePause.cpp \
+	test-config/common/src/venctest_Thread.cpp \
+	test-config/common/src/venctest_Time.cpp \
+	test-config/app/src/venctest_App.cpp
+
+mm_venc_omx_test_LDADD = -lcutils -lOmxVenc -lOmxCore
diff --git a/vidc/venc-omx/test-config/common/src/venctest_Encoder.cpp b/vidc/venc-omx/test-config/common/src/venctest_Encoder.cpp
index 2b95cb7..e4d4903 100644
--- a/vidc/venc-omx/test-config/common/src/venctest_Encoder.cpp
+++ b/vidc/venc-omx/test-config/common/src/venctest_Encoder.cpp
@@ -188,7 +188,9 @@ namespace venctest
    OMX_ERRORTYPE Encoder::Configure(EncoderConfigType* pConfig)
    {
       OMX_ERRORTYPE result = OMX_ErrorNone;
+#ifdef _ANDROID_
       char value[PROPERTY_VALUE_MAX] = {0};
+#endif
       VENC_TEST_MSG_HIGH("Encoder::Configure");
       if (pConfig == NULL)
       {
@@ -328,11 +330,13 @@ namespace venctest
                      break;
                   }
                   OMX_U32 slice_delivery_mode = 0;
+#ifdef _ANDROID_
                   property_get("vidc.venc.slicedeliverymode", value, "0");
                   slice_delivery_mode = atoi(value);
                   if (slice_delivery_mode) {
                      avc.nBFrames = 0;
                   }
+#endif
                }
                else
                {
@@ -545,8 +549,10 @@ namespace venctest
                                                (OMX_PTR) &avcdata);
                   }
                   OMX_U32 slice_delivery_mode = 0;
+#ifdef _ANDROID_
                   property_get("vidc.venc.slicedeliverymode", value, "0");
                   slice_delivery_mode = atoi(value);
+#endif
                   if ((result == OMX_ErrorNone) && (slice_delivery_mode))
                   {
                      VENC_TEST_MSG_HIGH("Slice delivery mode enabled via setprop command", 0, 0, 0);
diff --git a/vidc/venc-omx/test-config/common/src/venctest_FileSink.cpp b/vidc/venc-omx/test-config/common/src/venctest_FileSink.cpp
index 401dcab..025d87a 100644
--- a/vidc/venc-omx/test-config/common/src/venctest_FileSink.cpp
+++ b/vidc/venc-omx/test-config/common/src/venctest_FileSink.cpp
@@ -50,6 +50,7 @@ namespace venctest
    {
       VENC_TEST_MSG_LOW("created sink", 0, 0, 0);
 
+#ifdef _ANDROID_
       char value[PROPERTY_VALUE_MAX] = {0};
       property_get("vidc.venc.slicedeliverymode", value, "0");
       if (atoi(value))
@@ -57,6 +58,7 @@ namespace venctest
          VENC_TEST_MSG_HIGH("Slice delivery mode enabled on File Sink via setprop command.", 0, 0, 0);
          m_bSliceDeliveryMode = OMX_TRUE;
       }
+#endif
       if (eCodec == OMX_VIDEO_CodingVPX)
       {
          m_bIsVPX = OMX_TRUE;
-- 
1.8.2.1

